name: VM State Change

on:
  workflow_dispatch:
    inputs:
      STATE:
        required: true
        type: choice
        options:
          - NONE
          - START
          - STOP
          - RESTART
      user_email_address:
        required: true
        description: 'Email In which We send info'
        type: string
      environment:
        type: environment
        description: Select the environment

env:
  ACD: 'acdd'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      MY_MAP: '{"hmsexp": "PARTH_METHA", "owndel": "PARTH_MEHTA", "cap": "akash shrivastava"}'
    steps:  
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Run Python Script
        run: python test.py
      - name: Generate Unique ID
        id: unique_id
        run: |
          echo "::set-output name=uuid::$(uuidgen)"
          val1=$(echo "$MY_MAP" | jq -r '.hmsexp')
          val2=$(echo '${{ vars.MANAGER_LIST }}' | jq -r '.finbus')
          echo $val1
          echo $val2
      
      - name: Use Unique ID
        run: |
          unique_id=$GITHUB_RUN_ID-${{ steps.unique_id.outputs.uuid }}
          echo "Unique ID: $unique_id"
      - id: first
        run: |
          end_point="acnc"
          echo "image=$end_point" >> $GITHUB_OUTPUT
      - name: sleep for 1 minutes
        run: |
          echo "start"
          sleep 300s
          echo "end"
        shell: bash
        
      - name: login to ACR
        id: process_json
        run: |
          # Your JSON data
          EMAIL_ADDRESS=$(jq -r '.inputs.user_email_address' $GITHUB_EVENT_PATH)
          echo ::add-mask::$EMAIL_ADDRESS
          echo "::add-mask::${{ inputs.user_email_address }}"
          echo "${{ inputs.user_email_address }}"
          echo "$EMAIL_ADDRESS"
          json_data='{"name": "zs-oyo-temp-vm","privateIp": "10.73.100.4","resourceGroup": "Oyo-migration-RG"}'

          name=$(echo "$json_data" | jq -r '.name')
          privateIp=$(echo "$json_data" | jq -r '.privateIp')
          resourceGroup=$(echo "$json_data" | jq -r '.resourceGroup')
          
          echo "NAME=$name" >> $GITHUB_OUTPUT
          echo "PRIVATE_IP=$privateIp" >> $GITHUB_OUTPUT
          echo "RESOURCE_GROUP=$resourceGroup" >> $GITHUB_OUTPUT


      - run: |
          echo "$EMAIL_ADDRESS"
          echo "Name: ${{ steps.process_json.outputs.NAME }}"
          echo "Private IP: ${{ steps.process_json.outputs.PRIVATE_IP }}"
          echo "Resource Group: ${{ steps.process_json.outputs.RESOURCE_GROUP }}"





     
